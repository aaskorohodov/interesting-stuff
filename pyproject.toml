[tool.poetry]
name = "interesting-stuff"
version = "0.0.1"
description = "Different interesting things, related to Python"
authors = ["DY <aaskorohodov@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
contourpy = "1.2.0"
cycler = "0.12.1"
fonttools = "4.46.0"
kiwisolver = "1.4.5"
matplotlib = "3.8.2"
numpy = "1.26.2"
packaging = "23.2"
Pillow = "10.1.0"
pyparsing = "3.1.1"
python-dateutil = "2.8.2"
six = "1.16.0"

[tool.poetry.group.dev.dependencies]
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.25.0"
pytest = "^8.3.0"


[tool.ruff]
line-length = 120

[tool.ruff.lint]
ignore = [
  "D203",  # Indent from class declaration to docstring by 1 space
  "D107",  # Public init methods without docstring
  "D202",  # No indentation in methods/functions between the method code and the docstring (let indentation be there)
  "D209",  # Closing triple quotes in docstring on new line
  "D208",  # Prohibition of any indentation in docstring (for example, when there is a tab after Args)
  "D410",  # Indentation after Args in DocStrings
  "D411",  # Indent before Raises in DocStrings
  "D415",  # Mandatory periods/questions/question marks at the end of the first line of docstring
  "D104",  # Missing docstring in public package
  "D100",  # Missing docstring in public module
   "D402"  # First line should not be the function's signature
]
exclude = ["tests/*"]
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "UP",  # pyupgrade
  "D",   # pydocstyle
]

[tool.ruff.format]
quote-style = "single"
indent-style = "tab"
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
